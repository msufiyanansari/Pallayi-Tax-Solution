//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SenseInventoryLogoUI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StarEngineeringDataSet3")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StarEngineeringDataSet3 : global::System.Data.DataSet {
        
        private SalesMasterItemSalesPaymentReportDataTable tableSalesMasterItemSalesPaymentReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StarEngineeringDataSet3() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected StarEngineeringDataSet3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SalesMasterItemSalesPaymentReport"] != null)) {
                    base.Tables.Add(new SalesMasterItemSalesPaymentReportDataTable(ds.Tables["SalesMasterItemSalesPaymentReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesMasterItemSalesPaymentReportDataTable SalesMasterItemSalesPaymentReport {
            get {
                return this.tableSalesMasterItemSalesPaymentReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            StarEngineeringDataSet3 cln = ((StarEngineeringDataSet3)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SalesMasterItemSalesPaymentReport"] != null)) {
                    base.Tables.Add(new SalesMasterItemSalesPaymentReportDataTable(ds.Tables["SalesMasterItemSalesPaymentReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSalesMasterItemSalesPaymentReport = ((SalesMasterItemSalesPaymentReportDataTable)(base.Tables["SalesMasterItemSalesPaymentReport"]));
            if ((initTable == true)) {
                if ((this.tableSalesMasterItemSalesPaymentReport != null)) {
                    this.tableSalesMasterItemSalesPaymentReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "StarEngineeringDataSet3";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StarEngineeringDataSet3.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesMasterItemSalesPaymentReport = new SalesMasterItemSalesPaymentReportDataTable();
            base.Tables.Add(this.tableSalesMasterItemSalesPaymentReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSalesMasterItemSalesPaymentReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StarEngineeringDataSet3 ds = new StarEngineeringDataSet3();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SalesMasterItemSalesPaymentReportRowChangeEventHandler(object sender, SalesMasterItemSalesPaymentReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesMasterItemSalesPaymentReportDataTable : global::System.Data.TypedTableBase<SalesMasterItemSalesPaymentReportRow> {
            
            private global::System.Data.DataColumn columnSalesMasterKey;
            
            private global::System.Data.DataColumn columnSalesMasterDate;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyName;
            
            private global::System.Data.DataColumn columnSalesMasterMainTotal;
            
            private global::System.Data.DataColumn columnSalesMasterAddTaxPer;
            
            private global::System.Data.DataColumn columnSalesMasterAddTaxAmt;
            
            private global::System.Data.DataColumn columnSalesMasterDiscPer;
            
            private global::System.Data.DataColumn columnSalesMasterDiscAmount;
            
            private global::System.Data.DataColumn columnSalesMasterItemAmt;
            
            private global::System.Data.DataColumn columnSalesMasterType;
            
            private global::System.Data.DataColumn columnSalesTransactionItemDescription;
            
            private global::System.Data.DataColumn columnSalesTransactionKey;
            
            private global::System.Data.DataColumn columnSalesTransactionQty;
            
            private global::System.Data.DataColumn columnSalesTransactionRate;
            
            private global::System.Data.DataColumn columnSalesTransactionTotal;
            
            private global::System.Data.DataColumn columnSalesTransactionPayType;
            
            private global::System.Data.DataColumn columnSalesTransactionPayDate;
            
            private global::System.Data.DataColumn columnSalesTransactionPayBankFKeyName;
            
            private global::System.Data.DataColumn columnSalesTransactionPayBankChequeNo;
            
            private global::System.Data.DataColumn columnSalesTransactionPayAmount;
            
            private global::System.Data.DataColumn columnSalesTransactionPayKey;
            
            private global::System.Data.DataColumn columnSalesTransactionPayChequeDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportDataTable() {
                this.TableName = "SalesMasterItemSalesPaymentReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesMasterItemSalesPaymentReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SalesMasterItemSalesPaymentReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterKeyColumn {
                get {
                    return this.columnSalesMasterKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDateColumn {
                get {
                    return this.columnSalesMasterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyNameColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterMainTotalColumn {
                get {
                    return this.columnSalesMasterMainTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterAddTaxPerColumn {
                get {
                    return this.columnSalesMasterAddTaxPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterAddTaxAmtColumn {
                get {
                    return this.columnSalesMasterAddTaxAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDiscPerColumn {
                get {
                    return this.columnSalesMasterDiscPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDiscAmountColumn {
                get {
                    return this.columnSalesMasterDiscAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterItemAmtColumn {
                get {
                    return this.columnSalesMasterItemAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterTypeColumn {
                get {
                    return this.columnSalesMasterType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionItemDescriptionColumn {
                get {
                    return this.columnSalesTransactionItemDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionKeyColumn {
                get {
                    return this.columnSalesTransactionKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionQtyColumn {
                get {
                    return this.columnSalesTransactionQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionRateColumn {
                get {
                    return this.columnSalesTransactionRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionTotalColumn {
                get {
                    return this.columnSalesTransactionTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayTypeColumn {
                get {
                    return this.columnSalesTransactionPayType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayDateColumn {
                get {
                    return this.columnSalesTransactionPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayBankFKeyNameColumn {
                get {
                    return this.columnSalesTransactionPayBankFKeyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayBankChequeNoColumn {
                get {
                    return this.columnSalesTransactionPayBankChequeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayAmountColumn {
                get {
                    return this.columnSalesTransactionPayAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayKeyColumn {
                get {
                    return this.columnSalesTransactionPayKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionPayChequeDateColumn {
                get {
                    return this.columnSalesTransactionPayChequeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportRow this[int index] {
                get {
                    return ((SalesMasterItemSalesPaymentReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterItemSalesPaymentReportRowChangeEventHandler SalesMasterItemSalesPaymentReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterItemSalesPaymentReportRowChangeEventHandler SalesMasterItemSalesPaymentReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterItemSalesPaymentReportRowChangeEventHandler SalesMasterItemSalesPaymentReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterItemSalesPaymentReportRowChangeEventHandler SalesMasterItemSalesPaymentReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesMasterItemSalesPaymentReportRow(SalesMasterItemSalesPaymentReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportRow AddSalesMasterItemSalesPaymentReportRow(
                        string SalesMasterDate, 
                        string SalesMasterCustomerFKeyName, 
                        decimal SalesMasterMainTotal, 
                        decimal SalesMasterAddTaxPer, 
                        decimal SalesMasterAddTaxAmt, 
                        decimal SalesMasterDiscPer, 
                        decimal SalesMasterDiscAmount, 
                        decimal SalesMasterItemAmt, 
                        string SalesMasterType, 
                        string SalesTransactionItemDescription, 
                        int SalesTransactionKey, 
                        int SalesTransactionQty, 
                        decimal SalesTransactionRate, 
                        decimal SalesTransactionTotal, 
                        string SalesTransactionPayType, 
                        string SalesTransactionPayDate, 
                        string SalesTransactionPayBankFKeyName, 
                        string SalesTransactionPayBankChequeNo, 
                        decimal SalesTransactionPayAmount, 
                        int SalesTransactionPayKey, 
                        string SalesTransactionPayChequeDate) {
                SalesMasterItemSalesPaymentReportRow rowSalesMasterItemSalesPaymentReportRow = ((SalesMasterItemSalesPaymentReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SalesMasterDate,
                        SalesMasterCustomerFKeyName,
                        SalesMasterMainTotal,
                        SalesMasterAddTaxPer,
                        SalesMasterAddTaxAmt,
                        SalesMasterDiscPer,
                        SalesMasterDiscAmount,
                        SalesMasterItemAmt,
                        SalesMasterType,
                        SalesTransactionItemDescription,
                        SalesTransactionKey,
                        SalesTransactionQty,
                        SalesTransactionRate,
                        SalesTransactionTotal,
                        SalesTransactionPayType,
                        SalesTransactionPayDate,
                        SalesTransactionPayBankFKeyName,
                        SalesTransactionPayBankChequeNo,
                        SalesTransactionPayAmount,
                        SalesTransactionPayKey,
                        SalesTransactionPayChequeDate};
                rowSalesMasterItemSalesPaymentReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesMasterItemSalesPaymentReportRow);
                return rowSalesMasterItemSalesPaymentReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportRow FindBySalesMasterKey(int SalesMasterKey) {
                return ((SalesMasterItemSalesPaymentReportRow)(this.Rows.Find(new object[] {
                            SalesMasterKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SalesMasterItemSalesPaymentReportDataTable cln = ((SalesMasterItemSalesPaymentReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesMasterItemSalesPaymentReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSalesMasterKey = base.Columns["SalesMasterKey"];
                this.columnSalesMasterDate = base.Columns["SalesMasterDate"];
                this.columnSalesMasterCustomerFKeyName = base.Columns["SalesMasterCustomerFKeyName"];
                this.columnSalesMasterMainTotal = base.Columns["SalesMasterMainTotal"];
                this.columnSalesMasterAddTaxPer = base.Columns["SalesMasterAddTaxPer"];
                this.columnSalesMasterAddTaxAmt = base.Columns["SalesMasterAddTaxAmt"];
                this.columnSalesMasterDiscPer = base.Columns["SalesMasterDiscPer"];
                this.columnSalesMasterDiscAmount = base.Columns["SalesMasterDiscAmount"];
                this.columnSalesMasterItemAmt = base.Columns["SalesMasterItemAmt"];
                this.columnSalesMasterType = base.Columns["SalesMasterType"];
                this.columnSalesTransactionItemDescription = base.Columns["SalesTransactionItemDescription"];
                this.columnSalesTransactionKey = base.Columns["SalesTransactionKey"];
                this.columnSalesTransactionQty = base.Columns["SalesTransactionQty"];
                this.columnSalesTransactionRate = base.Columns["SalesTransactionRate"];
                this.columnSalesTransactionTotal = base.Columns["SalesTransactionTotal"];
                this.columnSalesTransactionPayType = base.Columns["SalesTransactionPayType"];
                this.columnSalesTransactionPayDate = base.Columns["SalesTransactionPayDate"];
                this.columnSalesTransactionPayBankFKeyName = base.Columns["SalesTransactionPayBankFKeyName"];
                this.columnSalesTransactionPayBankChequeNo = base.Columns["SalesTransactionPayBankChequeNo"];
                this.columnSalesTransactionPayAmount = base.Columns["SalesTransactionPayAmount"];
                this.columnSalesTransactionPayKey = base.Columns["SalesTransactionPayKey"];
                this.columnSalesTransactionPayChequeDate = base.Columns["SalesTransactionPayChequeDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSalesMasterKey = new global::System.Data.DataColumn("SalesMasterKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterKey);
                this.columnSalesMasterDate = new global::System.Data.DataColumn("SalesMasterDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDate);
                this.columnSalesMasterCustomerFKeyName = new global::System.Data.DataColumn("SalesMasterCustomerFKeyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyName);
                this.columnSalesMasterMainTotal = new global::System.Data.DataColumn("SalesMasterMainTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterMainTotal);
                this.columnSalesMasterAddTaxPer = new global::System.Data.DataColumn("SalesMasterAddTaxPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterAddTaxPer);
                this.columnSalesMasterAddTaxAmt = new global::System.Data.DataColumn("SalesMasterAddTaxAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterAddTaxAmt);
                this.columnSalesMasterDiscPer = new global::System.Data.DataColumn("SalesMasterDiscPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDiscPer);
                this.columnSalesMasterDiscAmount = new global::System.Data.DataColumn("SalesMasterDiscAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDiscAmount);
                this.columnSalesMasterItemAmt = new global::System.Data.DataColumn("SalesMasterItemAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterItemAmt);
                this.columnSalesMasterType = new global::System.Data.DataColumn("SalesMasterType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterType);
                this.columnSalesTransactionItemDescription = new global::System.Data.DataColumn("SalesTransactionItemDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionItemDescription);
                this.columnSalesTransactionKey = new global::System.Data.DataColumn("SalesTransactionKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionKey);
                this.columnSalesTransactionQty = new global::System.Data.DataColumn("SalesTransactionQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionQty);
                this.columnSalesTransactionRate = new global::System.Data.DataColumn("SalesTransactionRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionRate);
                this.columnSalesTransactionTotal = new global::System.Data.DataColumn("SalesTransactionTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionTotal);
                this.columnSalesTransactionPayType = new global::System.Data.DataColumn("SalesTransactionPayType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayType);
                this.columnSalesTransactionPayDate = new global::System.Data.DataColumn("SalesTransactionPayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayDate);
                this.columnSalesTransactionPayBankFKeyName = new global::System.Data.DataColumn("SalesTransactionPayBankFKeyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayBankFKeyName);
                this.columnSalesTransactionPayBankChequeNo = new global::System.Data.DataColumn("SalesTransactionPayBankChequeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayBankChequeNo);
                this.columnSalesTransactionPayAmount = new global::System.Data.DataColumn("SalesTransactionPayAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayAmount);
                this.columnSalesTransactionPayKey = new global::System.Data.DataColumn("SalesTransactionPayKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayKey);
                this.columnSalesTransactionPayChequeDate = new global::System.Data.DataColumn("SalesTransactionPayChequeDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionPayChequeDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSalesMasterKey}, true));
                this.columnSalesMasterKey.AutoIncrement = true;
                this.columnSalesMasterKey.AllowDBNull = false;
                this.columnSalesMasterKey.ReadOnly = true;
                this.columnSalesMasterKey.Unique = true;
                this.columnSalesMasterDate.ReadOnly = true;
                this.columnSalesMasterDate.MaxLength = 30;
                this.columnSalesMasterCustomerFKeyName.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyName.MaxLength = 250;
                this.columnSalesMasterMainTotal.ReadOnly = true;
                this.columnSalesMasterAddTaxPer.ReadOnly = true;
                this.columnSalesMasterAddTaxAmt.ReadOnly = true;
                this.columnSalesMasterDiscPer.ReadOnly = true;
                this.columnSalesMasterDiscAmount.ReadOnly = true;
                this.columnSalesMasterItemAmt.ReadOnly = true;
                this.columnSalesMasterType.ReadOnly = true;
                this.columnSalesMasterType.MaxLength = 250;
                this.columnSalesTransactionItemDescription.ReadOnly = true;
                this.columnSalesTransactionItemDescription.MaxLength = 2251;
                this.columnSalesTransactionKey.ReadOnly = true;
                this.columnSalesTransactionQty.ReadOnly = true;
                this.columnSalesTransactionRate.ReadOnly = true;
                this.columnSalesTransactionTotal.ReadOnly = true;
                this.columnSalesTransactionPayType.ReadOnly = true;
                this.columnSalesTransactionPayType.MaxLength = 250;
                this.columnSalesTransactionPayDate.ReadOnly = true;
                this.columnSalesTransactionPayDate.MaxLength = 30;
                this.columnSalesTransactionPayBankFKeyName.ReadOnly = true;
                this.columnSalesTransactionPayBankFKeyName.MaxLength = 250;
                this.columnSalesTransactionPayBankChequeNo.ReadOnly = true;
                this.columnSalesTransactionPayBankChequeNo.MaxLength = 10;
                this.columnSalesTransactionPayAmount.ReadOnly = true;
                this.columnSalesTransactionPayKey.ReadOnly = true;
                this.columnSalesTransactionPayChequeDate.ReadOnly = true;
                this.columnSalesTransactionPayChequeDate.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportRow NewSalesMasterItemSalesPaymentReportRow() {
                return ((SalesMasterItemSalesPaymentReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesMasterItemSalesPaymentReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SalesMasterItemSalesPaymentReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesMasterItemSalesPaymentReportRowChanged != null)) {
                    this.SalesMasterItemSalesPaymentReportRowChanged(this, new SalesMasterItemSalesPaymentReportRowChangeEvent(((SalesMasterItemSalesPaymentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesMasterItemSalesPaymentReportRowChanging != null)) {
                    this.SalesMasterItemSalesPaymentReportRowChanging(this, new SalesMasterItemSalesPaymentReportRowChangeEvent(((SalesMasterItemSalesPaymentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesMasterItemSalesPaymentReportRowDeleted != null)) {
                    this.SalesMasterItemSalesPaymentReportRowDeleted(this, new SalesMasterItemSalesPaymentReportRowChangeEvent(((SalesMasterItemSalesPaymentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesMasterItemSalesPaymentReportRowDeleting != null)) {
                    this.SalesMasterItemSalesPaymentReportRowDeleting(this, new SalesMasterItemSalesPaymentReportRowChangeEvent(((SalesMasterItemSalesPaymentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesMasterItemSalesPaymentReportRow(SalesMasterItemSalesPaymentReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StarEngineeringDataSet3 ds = new StarEngineeringDataSet3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesMasterItemSalesPaymentReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SalesMasterItemSalesPaymentReportRow : global::System.Data.DataRow {
            
            private SalesMasterItemSalesPaymentReportDataTable tableSalesMasterItemSalesPaymentReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesMasterItemSalesPaymentReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesMasterItemSalesPaymentReport = ((SalesMasterItemSalesPaymentReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesMasterKey {
                get {
                    return ((int)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterKeyColumn]));
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDate\' in table \'SalesMasterItemSalesPaymentRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterCustomerFKeyName {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterCustomerFKeyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyName\' in table \'SalesMasterItemSales" +
                                "PaymentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterCustomerFKeyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterMainTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterMainTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterMainTotal\' in table \'SalesMasterItemSalesPayment" +
                                "Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterMainTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterAddTaxPer {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterAddTaxPer\' in table \'SalesMasterItemSalesPayment" +
                                "Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterAddTaxAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterAddTaxAmt\' in table \'SalesMasterItemSalesPayment" +
                                "Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterDiscPer {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDiscPer\' in table \'SalesMasterItemSalesPaymentRe" +
                                "port\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterDiscAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDiscAmount\' in table \'SalesMasterItemSalesPaymen" +
                                "tReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterItemAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterItemAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterItemAmt\' in table \'SalesMasterItemSalesPaymentRe" +
                                "port\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterItemAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterType {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterType\' in table \'SalesMasterItemSalesPaymentRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionItemDescription {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionItemDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionItemDescription\' in table \'SalesMasterItemS" +
                                "alesPaymentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionItemDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTransactionKey {
                get {
                    try {
                        return ((int)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionKey\' in table \'SalesMasterItemSalesPaymentR" +
                                "eport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTransactionQty {
                get {
                    try {
                        return ((int)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionQty\' in table \'SalesMasterItemSalesPaymentR" +
                                "eport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesTransactionRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionRate\' in table \'SalesMasterItemSalesPayment" +
                                "Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesTransactionTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionTotal\' in table \'SalesMasterItemSalesPaymen" +
                                "tReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionPayType {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayType\' in table \'SalesMasterItemSalesPaym" +
                                "entReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionPayDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayDate\' in table \'SalesMasterItemSalesPaym" +
                                "entReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionPayBankFKeyName {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankFKeyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayBankFKeyName\' in table \'SalesMasterItemS" +
                                "alesPaymentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankFKeyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionPayBankChequeNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankChequeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayBankChequeNo\' in table \'SalesMasterItemS" +
                                "alesPaymentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankChequeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesTransactionPayAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayAmount\' in table \'SalesMasterItemSalesPa" +
                                "ymentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTransactionPayKey {
                get {
                    try {
                        return ((int)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayKey\' in table \'SalesMasterItemSalesPayme" +
                                "ntReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionPayChequeDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayChequeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionPayChequeDate\' in table \'SalesMasterItemSal" +
                                "esPaymentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayChequeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDateNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDateNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyNameNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterCustomerFKeyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyNameNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterCustomerFKeyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterMainTotalNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterMainTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterMainTotalNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterMainTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterAddTaxPerNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterAddTaxPerNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxPerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterAddTaxAmtNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterAddTaxAmtNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterAddTaxAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDiscPerNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDiscPerNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscPerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDiscAmountNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDiscAmountNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterDiscAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterItemAmtNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterItemAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterItemAmtNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterItemAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterTypeNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesMasterTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterTypeNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesMasterTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionItemDescriptionNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionItemDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionItemDescriptionNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionItemDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionKeyNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionKeyNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionQtyNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionQtyNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionRateNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionRateNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionTotalNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionTotalNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayTypeNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayTypeNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayDateNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayDateNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayBankFKeyNameNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankFKeyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayBankFKeyNameNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankFKeyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayBankChequeNoNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankChequeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayBankChequeNoNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayBankChequeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayAmountNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayAmountNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayKeyNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayKeyNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionPayChequeDateNull() {
                return this.IsNull(this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayChequeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionPayChequeDateNull() {
                this[this.tableSalesMasterItemSalesPaymentReport.SalesTransactionPayChequeDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SalesMasterItemSalesPaymentReportRowChangeEvent : global::System.EventArgs {
            
            private SalesMasterItemSalesPaymentReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportRowChangeEvent(SalesMasterItemSalesPaymentReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterItemSalesPaymentReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SenseInventoryLogoUI.StarEngineeringDataSet3TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SalesMasterItemSalesPaymentReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SalesMasterItemSalesPaymentReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SalesMasterItemSalesPaymentReport";
            tableMapping.ColumnMappings.Add("SalesMasterKey", "SalesMasterKey");
            tableMapping.ColumnMappings.Add("SalesMasterDate", "SalesMasterDate");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyName", "SalesMasterCustomerFKeyName");
            tableMapping.ColumnMappings.Add("SalesMasterMainTotal", "SalesMasterMainTotal");
            tableMapping.ColumnMappings.Add("SalesMasterAddTaxPer", "SalesMasterAddTaxPer");
            tableMapping.ColumnMappings.Add("SalesMasterAddTaxAmt", "SalesMasterAddTaxAmt");
            tableMapping.ColumnMappings.Add("SalesMasterDiscPer", "SalesMasterDiscPer");
            tableMapping.ColumnMappings.Add("SalesMasterDiscAmount", "SalesMasterDiscAmount");
            tableMapping.ColumnMappings.Add("SalesMasterItemAmt", "SalesMasterItemAmt");
            tableMapping.ColumnMappings.Add("SalesMasterType", "SalesMasterType");
            tableMapping.ColumnMappings.Add("SalesTransactionItemDescription", "SalesTransactionItemDescription");
            tableMapping.ColumnMappings.Add("SalesTransactionKey", "SalesTransactionKey");
            tableMapping.ColumnMappings.Add("SalesTransactionQty", "SalesTransactionQty");
            tableMapping.ColumnMappings.Add("SalesTransactionRate", "SalesTransactionRate");
            tableMapping.ColumnMappings.Add("SalesTransactionTotal", "SalesTransactionTotal");
            tableMapping.ColumnMappings.Add("SalesTransactionPayType", "SalesTransactionPayType");
            tableMapping.ColumnMappings.Add("SalesTransactionPayDate", "SalesTransactionPayDate");
            tableMapping.ColumnMappings.Add("SalesTransactionPayBankFKeyName", "SalesTransactionPayBankFKeyName");
            tableMapping.ColumnMappings.Add("SalesTransactionPayBankChequeNo", "SalesTransactionPayBankChequeNo");
            tableMapping.ColumnMappings.Add("SalesTransactionPayAmount", "SalesTransactionPayAmount");
            tableMapping.ColumnMappings.Add("SalesTransactionPayKey", "SalesTransactionPayKey");
            tableMapping.ColumnMappings.Add("SalesTransactionPayChequeDate", "SalesTransactionPayChequeDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SenseInventoryLogoUI.Properties.Settings.Default.StarEngineeringConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SalesMasterItemSalesPaymentReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesMasterCustomerFKeyName", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesMasterCustomerFKeyAddress", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesMasterType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StarEngineeringDataSet3.SalesMasterItemSalesPaymentReportDataTable dataTable, string SalesMasterCustomerFKeyName, string SalesMasterCustomerFKeyAddress, string FromDate, string ToDate, string SalesMasterType, global::System.Nullable<int> UserID, global::System.Nullable<int> CompanyID, string Action) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SalesMasterCustomerFKeyName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SalesMasterCustomerFKeyName));
            }
            if ((SalesMasterCustomerFKeyAddress == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(SalesMasterCustomerFKeyAddress));
            }
            if ((FromDate == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(FromDate));
            }
            if ((ToDate == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(ToDate));
            }
            if ((SalesMasterType == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(SalesMasterType));
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Action == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(Action));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StarEngineeringDataSet3.SalesMasterItemSalesPaymentReportDataTable GetData(string SalesMasterCustomerFKeyName, string SalesMasterCustomerFKeyAddress, string FromDate, string ToDate, string SalesMasterType, global::System.Nullable<int> UserID, global::System.Nullable<int> CompanyID, string Action) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SalesMasterCustomerFKeyName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SalesMasterCustomerFKeyName));
            }
            if ((SalesMasterCustomerFKeyAddress == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(SalesMasterCustomerFKeyAddress));
            }
            if ((FromDate == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(FromDate));
            }
            if ((ToDate == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(ToDate));
            }
            if ((SalesMasterType == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(SalesMasterType));
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Action == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(Action));
            }
            StarEngineeringDataSet3.SalesMasterItemSalesPaymentReportDataTable dataTable = new StarEngineeringDataSet3.SalesMasterItemSalesPaymentReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(StarEngineeringDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(StarEngineeringDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(StarEngineeringDataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(StarEngineeringDataSet3 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591