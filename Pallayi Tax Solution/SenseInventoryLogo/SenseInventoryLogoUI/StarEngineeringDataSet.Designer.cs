//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SenseInventoryLogoUI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StarEngineeringDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StarEngineeringDataSet : global::System.Data.DataSet {
        
        private SalesMasterReportDataTable tableSalesMasterReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StarEngineeringDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected StarEngineeringDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SalesMasterReport"] != null)) {
                    base.Tables.Add(new SalesMasterReportDataTable(ds.Tables["SalesMasterReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesMasterReportDataTable SalesMasterReport {
            get {
                return this.tableSalesMasterReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            StarEngineeringDataSet cln = ((StarEngineeringDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SalesMasterReport"] != null)) {
                    base.Tables.Add(new SalesMasterReportDataTable(ds.Tables["SalesMasterReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSalesMasterReport = ((SalesMasterReportDataTable)(base.Tables["SalesMasterReport"]));
            if ((initTable == true)) {
                if ((this.tableSalesMasterReport != null)) {
                    this.tableSalesMasterReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "StarEngineeringDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StarEngineeringDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesMasterReport = new SalesMasterReportDataTable();
            base.Tables.Add(this.tableSalesMasterReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSalesMasterReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StarEngineeringDataSet ds = new StarEngineeringDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SalesMasterReportRowChangeEventHandler(object sender, SalesMasterReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesMasterReportDataTable : global::System.Data.TypedTableBase<SalesMasterReportRow> {
            
            private global::System.Data.DataColumn columnSalesMasterKey;
            
            private global::System.Data.DataColumn columnSalesMasterDate;
            
            private global::System.Data.DataColumn columnSalesMasterDate1;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKey;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyName;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyGSTNo;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyCSTNo;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyAddress;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyGSTDate;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerFKeyCSTDate;
            
            private global::System.Data.DataColumn columnSalesMasterBillBookNo;
            
            private global::System.Data.DataColumn columnSalesMasterInvoiceNo;
            
            private global::System.Data.DataColumn columnSalesMasterInvoiceDate;
            
            private global::System.Data.DataColumn columnSalesMasterChlnNo;
            
            private global::System.Data.DataColumn columnSalesMasterChlnDate;
            
            private global::System.Data.DataColumn columnSalesMasterGrossTotal;
            
            private global::System.Data.DataColumn columnSalesMasterCartage;
            
            private global::System.Data.DataColumn columnSalesMasterSubTotal;
            
            private global::System.Data.DataColumn columnSalesMasterVatPerc;
            
            private global::System.Data.DataColumn columnSalesMasterVatAmount;
            
            private global::System.Data.DataColumn columnSalesMasterCustomerDetail;
            
            private global::System.Data.DataColumn columnSalesMasterMainTotal;
            
            private global::System.Data.DataColumn columnSalesMasterAddTaxPer;
            
            private global::System.Data.DataColumn columnSalesMasterAddTaxAmt;
            
            private global::System.Data.DataColumn columnSalesMasterDiscPer;
            
            private global::System.Data.DataColumn columnSalesMasterDiscAmount;
            
            private global::System.Data.DataColumn columnSalesMasterItemAmt;
            
            private global::System.Data.DataColumn columnSalesMasterType;
            
            private global::System.Data.DataColumn columnSalesTransactionQty;
            
            private global::System.Data.DataColumn columnSalesTransactionRate;
            
            private global::System.Data.DataColumn columnSalesTransactionTotal;
            
            private global::System.Data.DataColumn columnSalesTransactionItemFKeyName;
            
            private global::System.Data.DataColumn columnSalesTransactionItemDescription;
            
            private global::System.Data.DataColumn columnIndex;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportDataTable() {
                this.TableName = "SalesMasterReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesMasterReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SalesMasterReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterKeyColumn {
                get {
                    return this.columnSalesMasterKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDateColumn {
                get {
                    return this.columnSalesMasterDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDate1Column {
                get {
                    return this.columnSalesMasterDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyColumn {
                get {
                    return this.columnSalesMasterCustomerFKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyNameColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyGSTNoColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyGSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyCSTNoColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyCSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyAddressColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyGSTDateColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyGSTDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerFKeyCSTDateColumn {
                get {
                    return this.columnSalesMasterCustomerFKeyCSTDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterBillBookNoColumn {
                get {
                    return this.columnSalesMasterBillBookNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterInvoiceNoColumn {
                get {
                    return this.columnSalesMasterInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterInvoiceDateColumn {
                get {
                    return this.columnSalesMasterInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterChlnNoColumn {
                get {
                    return this.columnSalesMasterChlnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterChlnDateColumn {
                get {
                    return this.columnSalesMasterChlnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterGrossTotalColumn {
                get {
                    return this.columnSalesMasterGrossTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCartageColumn {
                get {
                    return this.columnSalesMasterCartage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterSubTotalColumn {
                get {
                    return this.columnSalesMasterSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterVatPercColumn {
                get {
                    return this.columnSalesMasterVatPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterVatAmountColumn {
                get {
                    return this.columnSalesMasterVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterCustomerDetailColumn {
                get {
                    return this.columnSalesMasterCustomerDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterMainTotalColumn {
                get {
                    return this.columnSalesMasterMainTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterAddTaxPerColumn {
                get {
                    return this.columnSalesMasterAddTaxPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterAddTaxAmtColumn {
                get {
                    return this.columnSalesMasterAddTaxAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDiscPerColumn {
                get {
                    return this.columnSalesMasterDiscPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterDiscAmountColumn {
                get {
                    return this.columnSalesMasterDiscAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterItemAmtColumn {
                get {
                    return this.columnSalesMasterItemAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesMasterTypeColumn {
                get {
                    return this.columnSalesMasterType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionQtyColumn {
                get {
                    return this.columnSalesTransactionQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionRateColumn {
                get {
                    return this.columnSalesTransactionRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionTotalColumn {
                get {
                    return this.columnSalesTransactionTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionItemFKeyNameColumn {
                get {
                    return this.columnSalesTransactionItemFKeyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTransactionItemDescriptionColumn {
                get {
                    return this.columnSalesTransactionItemDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexColumn {
                get {
                    return this.columnIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportRow this[int index] {
                get {
                    return ((SalesMasterReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterReportRowChangeEventHandler SalesMasterReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterReportRowChangeEventHandler SalesMasterReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterReportRowChangeEventHandler SalesMasterReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesMasterReportRowChangeEventHandler SalesMasterReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesMasterReportRow(SalesMasterReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportRow AddSalesMasterReportRow(
                        string SalesMasterDate, 
                        string SalesMasterDate1, 
                        int SalesMasterCustomerFKey, 
                        string SalesMasterCustomerFKeyName, 
                        decimal SalesMasterCustomerFKeyGSTNo, 
                        decimal SalesMasterCustomerFKeyCSTNo, 
                        string SalesMasterCustomerFKeyAddress, 
                        string SalesMasterCustomerFKeyGSTDate, 
                        string SalesMasterCustomerFKeyCSTDate, 
                        string SalesMasterBillBookNo, 
                        string SalesMasterInvoiceNo, 
                        string SalesMasterInvoiceDate, 
                        string SalesMasterChlnNo, 
                        string SalesMasterChlnDate, 
                        decimal SalesMasterGrossTotal, 
                        decimal SalesMasterCartage, 
                        decimal SalesMasterSubTotal, 
                        decimal SalesMasterVatPerc, 
                        decimal SalesMasterVatAmount, 
                        string SalesMasterCustomerDetail, 
                        decimal SalesMasterMainTotal, 
                        decimal SalesMasterAddTaxPer, 
                        decimal SalesMasterAddTaxAmt, 
                        decimal SalesMasterDiscPer, 
                        decimal SalesMasterDiscAmount, 
                        decimal SalesMasterItemAmt, 
                        string SalesMasterType, 
                        int SalesTransactionQty, 
                        decimal SalesTransactionRate, 
                        decimal SalesTransactionTotal, 
                        string SalesTransactionItemFKeyName, 
                        string SalesTransactionItemDescription, 
                        long Index) {
                SalesMasterReportRow rowSalesMasterReportRow = ((SalesMasterReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SalesMasterDate,
                        SalesMasterDate1,
                        SalesMasterCustomerFKey,
                        SalesMasterCustomerFKeyName,
                        SalesMasterCustomerFKeyGSTNo,
                        SalesMasterCustomerFKeyCSTNo,
                        SalesMasterCustomerFKeyAddress,
                        SalesMasterCustomerFKeyGSTDate,
                        SalesMasterCustomerFKeyCSTDate,
                        SalesMasterBillBookNo,
                        SalesMasterInvoiceNo,
                        SalesMasterInvoiceDate,
                        SalesMasterChlnNo,
                        SalesMasterChlnDate,
                        SalesMasterGrossTotal,
                        SalesMasterCartage,
                        SalesMasterSubTotal,
                        SalesMasterVatPerc,
                        SalesMasterVatAmount,
                        SalesMasterCustomerDetail,
                        SalesMasterMainTotal,
                        SalesMasterAddTaxPer,
                        SalesMasterAddTaxAmt,
                        SalesMasterDiscPer,
                        SalesMasterDiscAmount,
                        SalesMasterItemAmt,
                        SalesMasterType,
                        SalesTransactionQty,
                        SalesTransactionRate,
                        SalesTransactionTotal,
                        SalesTransactionItemFKeyName,
                        SalesTransactionItemDescription,
                        Index};
                rowSalesMasterReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesMasterReportRow);
                return rowSalesMasterReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportRow FindBySalesMasterKey(int SalesMasterKey) {
                return ((SalesMasterReportRow)(this.Rows.Find(new object[] {
                            SalesMasterKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SalesMasterReportDataTable cln = ((SalesMasterReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesMasterReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSalesMasterKey = base.Columns["SalesMasterKey"];
                this.columnSalesMasterDate = base.Columns["SalesMasterDate"];
                this.columnSalesMasterDate1 = base.Columns["SalesMasterDate1"];
                this.columnSalesMasterCustomerFKey = base.Columns["SalesMasterCustomerFKey"];
                this.columnSalesMasterCustomerFKeyName = base.Columns["SalesMasterCustomerFKeyName"];
                this.columnSalesMasterCustomerFKeyGSTNo = base.Columns["SalesMasterCustomerFKeyGSTNo"];
                this.columnSalesMasterCustomerFKeyCSTNo = base.Columns["SalesMasterCustomerFKeyCSTNo"];
                this.columnSalesMasterCustomerFKeyAddress = base.Columns["SalesMasterCustomerFKeyAddress"];
                this.columnSalesMasterCustomerFKeyGSTDate = base.Columns["SalesMasterCustomerFKeyGSTDate"];
                this.columnSalesMasterCustomerFKeyCSTDate = base.Columns["SalesMasterCustomerFKeyCSTDate"];
                this.columnSalesMasterBillBookNo = base.Columns["SalesMasterBillBookNo"];
                this.columnSalesMasterInvoiceNo = base.Columns["SalesMasterInvoiceNo"];
                this.columnSalesMasterInvoiceDate = base.Columns["SalesMasterInvoiceDate"];
                this.columnSalesMasterChlnNo = base.Columns["SalesMasterChlnNo"];
                this.columnSalesMasterChlnDate = base.Columns["SalesMasterChlnDate"];
                this.columnSalesMasterGrossTotal = base.Columns["SalesMasterGrossTotal"];
                this.columnSalesMasterCartage = base.Columns["SalesMasterCartage"];
                this.columnSalesMasterSubTotal = base.Columns["SalesMasterSubTotal"];
                this.columnSalesMasterVatPerc = base.Columns["SalesMasterVatPerc"];
                this.columnSalesMasterVatAmount = base.Columns["SalesMasterVatAmount"];
                this.columnSalesMasterCustomerDetail = base.Columns["SalesMasterCustomerDetail"];
                this.columnSalesMasterMainTotal = base.Columns["SalesMasterMainTotal"];
                this.columnSalesMasterAddTaxPer = base.Columns["SalesMasterAddTaxPer"];
                this.columnSalesMasterAddTaxAmt = base.Columns["SalesMasterAddTaxAmt"];
                this.columnSalesMasterDiscPer = base.Columns["SalesMasterDiscPer"];
                this.columnSalesMasterDiscAmount = base.Columns["SalesMasterDiscAmount"];
                this.columnSalesMasterItemAmt = base.Columns["SalesMasterItemAmt"];
                this.columnSalesMasterType = base.Columns["SalesMasterType"];
                this.columnSalesTransactionQty = base.Columns["SalesTransactionQty"];
                this.columnSalesTransactionRate = base.Columns["SalesTransactionRate"];
                this.columnSalesTransactionTotal = base.Columns["SalesTransactionTotal"];
                this.columnSalesTransactionItemFKeyName = base.Columns["SalesTransactionItemFKeyName"];
                this.columnSalesTransactionItemDescription = base.Columns["SalesTransactionItemDescription"];
                this.columnIndex = base.Columns["Index"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSalesMasterKey = new global::System.Data.DataColumn("SalesMasterKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterKey);
                this.columnSalesMasterDate = new global::System.Data.DataColumn("SalesMasterDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDate);
                this.columnSalesMasterDate1 = new global::System.Data.DataColumn("SalesMasterDate1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDate1);
                this.columnSalesMasterCustomerFKey = new global::System.Data.DataColumn("SalesMasterCustomerFKey", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKey);
                this.columnSalesMasterCustomerFKeyName = new global::System.Data.DataColumn("SalesMasterCustomerFKeyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyName);
                this.columnSalesMasterCustomerFKeyGSTNo = new global::System.Data.DataColumn("SalesMasterCustomerFKeyGSTNo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyGSTNo);
                this.columnSalesMasterCustomerFKeyCSTNo = new global::System.Data.DataColumn("SalesMasterCustomerFKeyCSTNo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyCSTNo);
                this.columnSalesMasterCustomerFKeyAddress = new global::System.Data.DataColumn("SalesMasterCustomerFKeyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyAddress);
                this.columnSalesMasterCustomerFKeyGSTDate = new global::System.Data.DataColumn("SalesMasterCustomerFKeyGSTDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyGSTDate);
                this.columnSalesMasterCustomerFKeyCSTDate = new global::System.Data.DataColumn("SalesMasterCustomerFKeyCSTDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerFKeyCSTDate);
                this.columnSalesMasterBillBookNo = new global::System.Data.DataColumn("SalesMasterBillBookNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterBillBookNo);
                this.columnSalesMasterInvoiceNo = new global::System.Data.DataColumn("SalesMasterInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterInvoiceNo);
                this.columnSalesMasterInvoiceDate = new global::System.Data.DataColumn("SalesMasterInvoiceDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterInvoiceDate);
                this.columnSalesMasterChlnNo = new global::System.Data.DataColumn("SalesMasterChlnNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterChlnNo);
                this.columnSalesMasterChlnDate = new global::System.Data.DataColumn("SalesMasterChlnDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterChlnDate);
                this.columnSalesMasterGrossTotal = new global::System.Data.DataColumn("SalesMasterGrossTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterGrossTotal);
                this.columnSalesMasterCartage = new global::System.Data.DataColumn("SalesMasterCartage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCartage);
                this.columnSalesMasterSubTotal = new global::System.Data.DataColumn("SalesMasterSubTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterSubTotal);
                this.columnSalesMasterVatPerc = new global::System.Data.DataColumn("SalesMasterVatPerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterVatPerc);
                this.columnSalesMasterVatAmount = new global::System.Data.DataColumn("SalesMasterVatAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterVatAmount);
                this.columnSalesMasterCustomerDetail = new global::System.Data.DataColumn("SalesMasterCustomerDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterCustomerDetail);
                this.columnSalesMasterMainTotal = new global::System.Data.DataColumn("SalesMasterMainTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterMainTotal);
                this.columnSalesMasterAddTaxPer = new global::System.Data.DataColumn("SalesMasterAddTaxPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterAddTaxPer);
                this.columnSalesMasterAddTaxAmt = new global::System.Data.DataColumn("SalesMasterAddTaxAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterAddTaxAmt);
                this.columnSalesMasterDiscPer = new global::System.Data.DataColumn("SalesMasterDiscPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDiscPer);
                this.columnSalesMasterDiscAmount = new global::System.Data.DataColumn("SalesMasterDiscAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterDiscAmount);
                this.columnSalesMasterItemAmt = new global::System.Data.DataColumn("SalesMasterItemAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterItemAmt);
                this.columnSalesMasterType = new global::System.Data.DataColumn("SalesMasterType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMasterType);
                this.columnSalesTransactionQty = new global::System.Data.DataColumn("SalesTransactionQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionQty);
                this.columnSalesTransactionRate = new global::System.Data.DataColumn("SalesTransactionRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionRate);
                this.columnSalesTransactionTotal = new global::System.Data.DataColumn("SalesTransactionTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionTotal);
                this.columnSalesTransactionItemFKeyName = new global::System.Data.DataColumn("SalesTransactionItemFKeyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionItemFKeyName);
                this.columnSalesTransactionItemDescription = new global::System.Data.DataColumn("SalesTransactionItemDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTransactionItemDescription);
                this.columnIndex = new global::System.Data.DataColumn("Index", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSalesMasterKey}, true));
                this.columnSalesMasterKey.AutoIncrement = true;
                this.columnSalesMasterKey.AllowDBNull = false;
                this.columnSalesMasterKey.ReadOnly = true;
                this.columnSalesMasterKey.Unique = true;
                this.columnSalesMasterDate.ReadOnly = true;
                this.columnSalesMasterDate.MaxLength = 30;
                this.columnSalesMasterDate1.ReadOnly = true;
                this.columnSalesMasterDate1.MaxLength = 30;
                this.columnSalesMasterCustomerFKeyName.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyName.MaxLength = 250;
                this.columnSalesMasterCustomerFKeyGSTNo.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyCSTNo.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyAddress.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyAddress.MaxLength = 250;
                this.columnSalesMasterCustomerFKeyGSTDate.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyGSTDate.MaxLength = 30;
                this.columnSalesMasterCustomerFKeyCSTDate.ReadOnly = true;
                this.columnSalesMasterCustomerFKeyCSTDate.MaxLength = 30;
                this.columnSalesMasterBillBookNo.MaxLength = 50;
                this.columnSalesMasterInvoiceNo.MaxLength = 50;
                this.columnSalesMasterInvoiceDate.ReadOnly = true;
                this.columnSalesMasterInvoiceDate.MaxLength = 30;
                this.columnSalesMasterChlnNo.ReadOnly = true;
                this.columnSalesMasterChlnNo.MaxLength = 50;
                this.columnSalesMasterChlnDate.ReadOnly = true;
                this.columnSalesMasterChlnDate.MaxLength = 30;
                this.columnSalesMasterGrossTotal.ReadOnly = true;
                this.columnSalesMasterCartage.ReadOnly = true;
                this.columnSalesMasterSubTotal.ReadOnly = true;
                this.columnSalesMasterVatPerc.ReadOnly = true;
                this.columnSalesMasterVatAmount.ReadOnly = true;
                this.columnSalesMasterCustomerDetail.ReadOnly = true;
                this.columnSalesMasterCustomerDetail.MaxLength = 600;
                this.columnSalesMasterMainTotal.ReadOnly = true;
                this.columnSalesMasterAddTaxPer.ReadOnly = true;
                this.columnSalesMasterAddTaxAmt.ReadOnly = true;
                this.columnSalesMasterDiscPer.ReadOnly = true;
                this.columnSalesMasterDiscAmount.ReadOnly = true;
                this.columnSalesMasterItemAmt.ReadOnly = true;
                this.columnSalesMasterType.ReadOnly = true;
                this.columnSalesMasterType.MaxLength = 250;
                this.columnSalesTransactionQty.ReadOnly = true;
                this.columnSalesTransactionRate.ReadOnly = true;
                this.columnSalesTransactionTotal.ReadOnly = true;
                this.columnSalesTransactionItemFKeyName.ReadOnly = true;
                this.columnSalesTransactionItemFKeyName.MaxLength = 2000;
                this.columnSalesTransactionItemDescription.ReadOnly = true;
                this.columnSalesTransactionItemDescription.MaxLength = 2251;
                this.columnIndex.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportRow NewSalesMasterReportRow() {
                return ((SalesMasterReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesMasterReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SalesMasterReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesMasterReportRowChanged != null)) {
                    this.SalesMasterReportRowChanged(this, new SalesMasterReportRowChangeEvent(((SalesMasterReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesMasterReportRowChanging != null)) {
                    this.SalesMasterReportRowChanging(this, new SalesMasterReportRowChangeEvent(((SalesMasterReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesMasterReportRowDeleted != null)) {
                    this.SalesMasterReportRowDeleted(this, new SalesMasterReportRowChangeEvent(((SalesMasterReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesMasterReportRowDeleting != null)) {
                    this.SalesMasterReportRowDeleting(this, new SalesMasterReportRowChangeEvent(((SalesMasterReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesMasterReportRow(SalesMasterReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StarEngineeringDataSet ds = new StarEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesMasterReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SalesMasterReportRow : global::System.Data.DataRow {
            
            private SalesMasterReportDataTable tableSalesMasterReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesMasterReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesMasterReport = ((SalesMasterReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesMasterKey {
                get {
                    return ((int)(this[this.tableSalesMasterReport.SalesMasterKeyColumn]));
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDate\' in table \'SalesMasterReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterDate1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDate1\' in table \'SalesMasterReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesMasterCustomerFKey {
                get {
                    try {
                        return ((int)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKey\' in table \'SalesMasterReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterCustomerFKeyName {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyName\' in table \'SalesMasterReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterCustomerFKeyGSTNo {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyGSTNo\' in table \'SalesMasterReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterCustomerFKeyCSTNo {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyCSTNo\' in table \'SalesMasterReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterCustomerFKeyAddress {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyAddress\' in table \'SalesMasterReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterCustomerFKeyGSTDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyGSTDate\' in table \'SalesMasterReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterCustomerFKeyCSTDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerFKeyCSTDate\' in table \'SalesMasterReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterBillBookNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterBillBookNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterBillBookNo\' in table \'SalesMasterReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterBillBookNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterInvoiceNo\' in table \'SalesMasterReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterInvoiceDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterInvoiceDate\' in table \'SalesMasterReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterChlnNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterChlnNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterChlnNo\' in table \'SalesMasterReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterChlnNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterChlnDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterChlnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterChlnDate\' in table \'SalesMasterReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterChlnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterGrossTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterGrossTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterGrossTotal\' in table \'SalesMasterReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterGrossTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterCartage {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterCartageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCartage\' in table \'SalesMasterReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCartageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterSubTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterSubTotal\' in table \'SalesMasterReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterVatPerc {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterVatPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterVatPerc\' in table \'SalesMasterReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterVatPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterVatAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterVatAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterVatAmount\' in table \'SalesMasterReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterVatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterCustomerDetail {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterCustomerDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterCustomerDetail\' in table \'SalesMasterReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterCustomerDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterMainTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterMainTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterMainTotal\' in table \'SalesMasterReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterMainTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterAddTaxPer {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterAddTaxPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterAddTaxPer\' in table \'SalesMasterReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterAddTaxPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterAddTaxAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterAddTaxAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterAddTaxAmt\' in table \'SalesMasterReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterAddTaxAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterDiscPer {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterDiscPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDiscPer\' in table \'SalesMasterReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterDiscPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterDiscAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterDiscAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterDiscAmount\' in table \'SalesMasterReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterDiscAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesMasterItemAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesMasterItemAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterItemAmt\' in table \'SalesMasterReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterItemAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesMasterType {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesMasterTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesMasterType\' in table \'SalesMasterReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesMasterTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTransactionQty {
                get {
                    try {
                        return ((int)(this[this.tableSalesMasterReport.SalesTransactionQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionQty\' in table \'SalesMasterReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesTransactionQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesTransactionRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesTransactionRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionRate\' in table \'SalesMasterReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesTransactionRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesTransactionTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesMasterReport.SalesTransactionTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionTotal\' in table \'SalesMasterReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesTransactionTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionItemFKeyName {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesTransactionItemFKeyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionItemFKeyName\' in table \'SalesMasterReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesTransactionItemFKeyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesTransactionItemDescription {
                get {
                    try {
                        return ((string)(this[this.tableSalesMasterReport.SalesTransactionItemDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTransactionItemDescription\' in table \'SalesMasterRepor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.SalesTransactionItemDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Index {
                get {
                    try {
                        return ((long)(this[this.tableSalesMasterReport.IndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Index\' in table \'SalesMasterReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesMasterReport.IndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDateNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDateNull() {
                this[this.tableSalesMasterReport.SalesMasterDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDate1Null() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDate1Null() {
                this[this.tableSalesMasterReport.SalesMasterDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyNameNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyNameNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyGSTNoNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyGSTNoNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyCSTNoNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyCSTNoNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyAddressNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyAddressNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyGSTDateNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyGSTDateNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyGSTDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerFKeyCSTDateNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerFKeyCSTDateNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerFKeyCSTDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterBillBookNoNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterBillBookNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterBillBookNoNull() {
                this[this.tableSalesMasterReport.SalesMasterBillBookNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterInvoiceNoNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterInvoiceNoNull() {
                this[this.tableSalesMasterReport.SalesMasterInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterInvoiceDateNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterInvoiceDateNull() {
                this[this.tableSalesMasterReport.SalesMasterInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterChlnNoNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterChlnNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterChlnNoNull() {
                this[this.tableSalesMasterReport.SalesMasterChlnNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterChlnDateNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterChlnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterChlnDateNull() {
                this[this.tableSalesMasterReport.SalesMasterChlnDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterGrossTotalNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterGrossTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterGrossTotalNull() {
                this[this.tableSalesMasterReport.SalesMasterGrossTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCartageNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCartageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCartageNull() {
                this[this.tableSalesMasterReport.SalesMasterCartageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterSubTotalNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterSubTotalNull() {
                this[this.tableSalesMasterReport.SalesMasterSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterVatPercNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterVatPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterVatPercNull() {
                this[this.tableSalesMasterReport.SalesMasterVatPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterVatAmountNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterVatAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterVatAmountNull() {
                this[this.tableSalesMasterReport.SalesMasterVatAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterCustomerDetailNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterCustomerDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterCustomerDetailNull() {
                this[this.tableSalesMasterReport.SalesMasterCustomerDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterMainTotalNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterMainTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterMainTotalNull() {
                this[this.tableSalesMasterReport.SalesMasterMainTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterAddTaxPerNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterAddTaxPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterAddTaxPerNull() {
                this[this.tableSalesMasterReport.SalesMasterAddTaxPerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterAddTaxAmtNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterAddTaxAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterAddTaxAmtNull() {
                this[this.tableSalesMasterReport.SalesMasterAddTaxAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDiscPerNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterDiscPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDiscPerNull() {
                this[this.tableSalesMasterReport.SalesMasterDiscPerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterDiscAmountNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterDiscAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterDiscAmountNull() {
                this[this.tableSalesMasterReport.SalesMasterDiscAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterItemAmtNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterItemAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterItemAmtNull() {
                this[this.tableSalesMasterReport.SalesMasterItemAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesMasterTypeNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesMasterTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesMasterTypeNull() {
                this[this.tableSalesMasterReport.SalesMasterTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionQtyNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesTransactionQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionQtyNull() {
                this[this.tableSalesMasterReport.SalesTransactionQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionRateNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesTransactionRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionRateNull() {
                this[this.tableSalesMasterReport.SalesTransactionRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionTotalNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesTransactionTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionTotalNull() {
                this[this.tableSalesMasterReport.SalesTransactionTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionItemFKeyNameNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesTransactionItemFKeyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionItemFKeyNameNull() {
                this[this.tableSalesMasterReport.SalesTransactionItemFKeyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesTransactionItemDescriptionNull() {
                return this.IsNull(this.tableSalesMasterReport.SalesTransactionItemDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesTransactionItemDescriptionNull() {
                this[this.tableSalesMasterReport.SalesTransactionItemDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIndexNull() {
                return this.IsNull(this.tableSalesMasterReport.IndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIndexNull() {
                this[this.tableSalesMasterReport.IndexColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SalesMasterReportRowChangeEvent : global::System.EventArgs {
            
            private SalesMasterReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportRowChangeEvent(SalesMasterReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesMasterReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SenseInventoryLogoUI.StarEngineeringDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SalesMasterReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SalesMasterReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SalesMasterReport";
            tableMapping.ColumnMappings.Add("SalesMasterKey", "SalesMasterKey");
            tableMapping.ColumnMappings.Add("SalesMasterDate", "SalesMasterDate");
            tableMapping.ColumnMappings.Add("SalesMasterDate1", "SalesMasterDate1");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKey", "SalesMasterCustomerFKey");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyName", "SalesMasterCustomerFKeyName");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyGSTNo", "SalesMasterCustomerFKeyGSTNo");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyCSTNo", "SalesMasterCustomerFKeyCSTNo");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyAddress", "SalesMasterCustomerFKeyAddress");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyGSTDate", "SalesMasterCustomerFKeyGSTDate");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerFKeyCSTDate", "SalesMasterCustomerFKeyCSTDate");
            tableMapping.ColumnMappings.Add("SalesMasterBillBookNo", "SalesMasterBillBookNo");
            tableMapping.ColumnMappings.Add("SalesMasterInvoiceNo", "SalesMasterInvoiceNo");
            tableMapping.ColumnMappings.Add("SalesMasterInvoiceDate", "SalesMasterInvoiceDate");
            tableMapping.ColumnMappings.Add("SalesMasterChlnNo", "SalesMasterChlnNo");
            tableMapping.ColumnMappings.Add("SalesMasterChlnDate", "SalesMasterChlnDate");
            tableMapping.ColumnMappings.Add("SalesMasterGrossTotal", "SalesMasterGrossTotal");
            tableMapping.ColumnMappings.Add("SalesMasterCartage", "SalesMasterCartage");
            tableMapping.ColumnMappings.Add("SalesMasterSubTotal", "SalesMasterSubTotal");
            tableMapping.ColumnMappings.Add("SalesMasterVatPerc", "SalesMasterVatPerc");
            tableMapping.ColumnMappings.Add("SalesMasterVatAmount", "SalesMasterVatAmount");
            tableMapping.ColumnMappings.Add("SalesMasterCustomerDetail", "SalesMasterCustomerDetail");
            tableMapping.ColumnMappings.Add("SalesMasterMainTotal", "SalesMasterMainTotal");
            tableMapping.ColumnMappings.Add("SalesMasterAddTaxPer", "SalesMasterAddTaxPer");
            tableMapping.ColumnMappings.Add("SalesMasterAddTaxAmt", "SalesMasterAddTaxAmt");
            tableMapping.ColumnMappings.Add("SalesMasterDiscPer", "SalesMasterDiscPer");
            tableMapping.ColumnMappings.Add("SalesMasterDiscAmount", "SalesMasterDiscAmount");
            tableMapping.ColumnMappings.Add("SalesMasterItemAmt", "SalesMasterItemAmt");
            tableMapping.ColumnMappings.Add("SalesMasterType", "SalesMasterType");
            tableMapping.ColumnMappings.Add("SalesTransactionQty", "SalesTransactionQty");
            tableMapping.ColumnMappings.Add("SalesTransactionRate", "SalesTransactionRate");
            tableMapping.ColumnMappings.Add("SalesTransactionTotal", "SalesTransactionTotal");
            tableMapping.ColumnMappings.Add("SalesTransactionItemFKeyName", "SalesTransactionItemFKeyName");
            tableMapping.ColumnMappings.Add("SalesTransactionItemDescription", "SalesTransactionItemDescription");
            tableMapping.ColumnMappings.Add("Index", "Index");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SenseInventoryLogoUI.Properties.Settings.Default.StarEngineeringConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SalesMasterReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesMasterKey", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StarEngineeringDataSet.SalesMasterReportDataTable dataTable, global::System.Nullable<int> SalesMasterKey, global::System.Nullable<int> UserID, global::System.Nullable<int> CompanyID, string Action) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SalesMasterKey.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SalesMasterKey.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Action == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(Action));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StarEngineeringDataSet.SalesMasterReportDataTable GetData(global::System.Nullable<int> SalesMasterKey, global::System.Nullable<int> UserID, global::System.Nullable<int> CompanyID, string Action) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SalesMasterKey.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SalesMasterKey.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Action == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(Action));
            }
            StarEngineeringDataSet.SalesMasterReportDataTable dataTable = new StarEngineeringDataSet.SalesMasterReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(StarEngineeringDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(StarEngineeringDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(StarEngineeringDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(StarEngineeringDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591